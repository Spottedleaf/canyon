From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Andrew Steinborn <git@steinborn.me>
Date: Wed, 21 Aug 2019 23:52:44 -0400
Subject: [PATCH] Bump to Java 8

This does not completely convert the server to use Java 8, but it starts
us on the path.

diff --git a/src/main/java/org/bukkit/craftbukkit/util/Java15Compat.java b/src/main/java/org/bukkit/craftbukkit/util/Java15Compat.java
deleted file mode 100644
index c9c5f284dfe040836d7d54da57b175fe0fa84475..0000000000000000000000000000000000000000
--- a/src/main/java/org/bukkit/craftbukkit/util/Java15Compat.java
+++ /dev/null
@@ -1,34 +0,0 @@
-package org.bukkit.craftbukkit.util;
-
-import java.lang.reflect.Array;
-
-public class Java15Compat {
-    public static <T> T[] Arrays_copyOf(T[] original, int newLength) {
-        if (0 <= newLength) {
-            return org.bukkit.util.Java15Compat.Arrays_copyOfRange(original, 0, newLength);
-        }
-        throw new NegativeArraySizeException();
-    }
-
-    public static long[] Arrays_copyOf(long[] original, int newLength) {
-        if (0 <= newLength) {
-            return Arrays_copyOfRange(original, 0, newLength);
-        }
-        throw new NegativeArraySizeException();
-    }
-
-    private static long[] Arrays_copyOfRange(long[] original, int start, int end) {
-        if (original.length >= start && 0 <= start) {
-            if (start <= end) {
-                int length = end - start;
-                int copyLength = Math.min(length, original.length - start);
-                long[] copy = (long[]) Array.newInstance(original.getClass().getComponentType(), length);
-                System.arraycopy(original, start, copy, 0, copyLength);
-                return copy;
-            }
-            throw new IllegalArgumentException();
-        }
-        throw new ArrayIndexOutOfBoundsException();
-    }
-
-}
diff --git a/src/main/java/org/bukkit/craftbukkit/util/LongHashset.java b/src/main/java/org/bukkit/craftbukkit/util/LongHashset.java
index 592f3254f6bcad91d38d4fb9c00b67556733f3d8..cb4d0fceec5f947fdadfe27bde2669ff8a08a0cf 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/LongHashset.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/LongHashset.java
@@ -1,6 +1,6 @@
 package org.bukkit.craftbukkit.util;
 
-import static org.bukkit.craftbukkit.util.Java15Compat.Arrays_copyOf;
+//import static org.bukkit.craftbukkit.util.Java15Compat.Arrays_copyOf; // Canyon - Move into the future with Java 8
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 import java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock;
 import java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock;
@@ -48,7 +48,7 @@ public class LongHashset extends LongHash {
                         return;
                     }
                 }
-                inner = Arrays_copyOf(inner, i + 1);
+                inner = java.util.Arrays.copyOf(inner, i + 1); // Canyon
                 outer[outerIdx] = inner;
                 inner[i] = key;
                 this.count++;
@@ -93,7 +93,7 @@ public class LongHashset extends LongHash {
                         inner[i] = inner[max];
                     }
 
-                    outer[(int) ((key >> 32) & 255)] = (max == 0 ? null : Arrays_copyOf(inner, max));
+                    outer[(int) ((key >> 32) & 255)] = (max == 0 ? null : java.util.Arrays.copyOf(inner, max)); // Canyon
                     return;
                 }
             }
@@ -114,7 +114,7 @@ public class LongHashset extends LongHash {
 
                     this.count--;
                     long ret = inner[inner.length - 1];
-                    outer[i] = Arrays_copyOf(inner, inner.length - 1);
+                    outer[i] = java.util.Arrays.copyOf(inner, inner.length - 1); // Canyon
 
                     return ret;
                 }
diff --git a/src/main/java/org/bukkit/craftbukkit/util/LongHashtable.java b/src/main/java/org/bukkit/craftbukkit/util/LongHashtable.java
index b438e8faefb74225a6684001935a5b9382b6c5eb..5880e3c1c53d6847ca5f5dfe213123bb91ac214e 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/LongHashtable.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/LongHashtable.java
@@ -3,7 +3,7 @@ package org.bukkit.craftbukkit.util;
 import java.util.ArrayList;
 import net.minecraft.server.Chunk;
 import net.minecraft.server.MinecraftServer;
-import static org.bukkit.craftbukkit.util.Java15Compat.Arrays_copyOf;
+//import static org.bukkit.craftbukkit.util.Java15Compat.Arrays_copyOf; // Canyon - Move into the future with Java 8
 
 public class LongHashtable<V> extends LongHash {
     Object[][][] values = new Object[256][][];
@@ -56,7 +56,7 @@ public class LongHashtable<V> extends LongHash {
                 }
             }
 
-            outer[outerIdx] = inner = Arrays_copyOf(inner, i + i);
+            outer[outerIdx] = inner = java.util.Arrays.copyOf(inner, i + i); // Canyon
             inner[i] = new Entry(key, value);
         }
     }
